
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("foreach")
> library("doParallel")
Loading required package: iterators
Loading required package: parallel
> library("parallel")
> source("sim.R")

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

make: Nothing to be done for `all'.
> 
> cl <- makeCluster(getOption("cl.cores", 4))
> clusterSetRNGStream(cl, 0)
> clusterEvalQ(cl, source("utils.R"))
make: Nothing to be done for `all'.
make: Nothing to be done for `all'.
make: Nothing to be done for `all'.
make: Nothing to be done for `all'.
[[1]]
[[1]]$value
function (u, v = NULL) 
{
    m <- ncol(u)
    u <- if (is.null(v)) 
        cbind(u, u)
    else cbind(u, v)
    t(apply(u, 1, function(r) as.vector(r[1:m] %o% r[-(1:m)])))
}

[[1]]$visible
[1] FALSE


[[2]]
[[2]]$value
function (u, v = NULL) 
{
    m <- ncol(u)
    u <- if (is.null(v)) 
        cbind(u, u)
    else cbind(u, v)
    t(apply(u, 1, function(r) as.vector(r[1:m] %o% r[-(1:m)])))
}

[[2]]$visible
[1] FALSE


[[3]]
[[3]]$value
function (u, v = NULL) 
{
    m <- ncol(u)
    u <- if (is.null(v)) 
        cbind(u, u)
    else cbind(u, v)
    t(apply(u, 1, function(r) as.vector(r[1:m] %o% r[-(1:m)])))
}

[[3]]$visible
[1] FALSE


[[4]]
[[4]]$value
function (u, v = NULL) 
{
    m <- ncol(u)
    u <- if (is.null(v)) 
        cbind(u, u)
    else cbind(u, v)
    t(apply(u, 1, function(r) as.vector(r[1:m] %o% r[-(1:m)])))
}

[[4]]$visible
[1] FALSE


> registerDoParallel(cl)
> 
> n <- 50
> tmax <- 100
> M <- 1000
> 
> attributes(rsnmm(5, 5, beta0 = c(-0.8, 0, 0, 0), eta = rep(0, 5),
+                  xi0 = c(0.8, 0), coef.vary = c(0, 0, 0, 0.8)))
$names
 [1] "id"             "time"           "base"           "vary"          
 [5] "a"              "y"              "err"            "prob"          
 [9] "a.center"       "vary.center"    "one"            "lagy"          
[13] "lag2y"          "lagerr"         "laga"           "lag2a"         
[17] "lagprob"        "lag2prob"       "laga.center"    "lag2a.center"  
[21] "lagvary"        "lagvary.center"

$row.names
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
[26] 26 27 28 29 30 31 32 33 34 35

$class
[1] "data.frame"

$origin
[1] 1

$sd
[1] 1

$corr
         [,1]    [,2]   [,3]  [,4]   [,5]    [,6]     [,7]
[1,] 1.000000 0.50000 0.2500 0.125 0.0625 0.03125 0.015625
[2,] 0.500000 1.00000 0.5000 0.250 0.1250 0.06250 0.031250
[3,] 0.250000 0.50000 1.0000 0.500 0.2500 0.12500 0.062500
[4,] 0.125000 0.25000 0.5000 1.000 0.5000 0.25000 0.125000
[5,] 0.062500 0.12500 0.2500 0.500 1.0000 0.50000 0.250000
[6,] 0.031250 0.06250 0.1250 0.250 0.5000 1.00000 0.500000
[7,] 0.015625 0.03125 0.0625 0.125 0.2500 0.50000 1.000000

$lag
[1] 3

$beta0
 one base vary laga 
-0.8  0.0  0.0  0.0 

$beta1
    one    base lagvary 
      0       0       0 

$eta
 one base vary laga lagy 
   0    0    0    0    0 

$mu
 one base 
   0    0 

$xi0
vary lagy 
 0.8  0.0 

$xi1
lagvary 
      0 

$coef.vary
    one    base lagvary    laga 
    0.0     0.0     0.0     0.8 

$alpha
[1] 0.5

> 
> ar1 <- sim(n, tmax, M, scenario = "ar1", beta0 = c(-0.8, 0, 0, 0),
+            eta = rep(0, 5), xi0 = c(0.8, 0), coef.vary = c(0, 0, 0, 0.8))

Generative model parameters

                   one base vary laga
  Proximal effect -0.8    0    0    0

                 one base lagvary
  Delayed effect   0    0       0

              one base vary lagy lagvary
  Main effect   0    0  0.8    0       0

                         one base lagvary laga
  Time-varying covariate   0    0       0  0.8

            one base vary laga lagy
  Treatment   0    0    0    0    0

Analysis model terms - weighting or routine

  Treatment: a
  Main: one, lagy

Analysis model terms - centering

  Treatment: a.center
  Main: one, lagy

> 
> save(ar1, file = "sim-ar1.RData")
> 
> proc.time()
     user    system   elapsed 
    3.555     0.181 39706.381 
